- name: Disable the nodeJs Version
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enable the nodeJs Version
  ansible.builtin.shell: dnf module enable nodejs:18 -y

- name: Installing the Node JS
  ansible.builtin.dnf:
    name: nodejs
    state: present

- name: Copying the Backend service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: add application user
  ansible.builtin.user:
    name: expense

- name: import common role - App Pre-requisites
  ansible.builtin.import_role:
      name: common
      tasks_from: app-prereq
  vars:
      app_dir: /app
      component: backend

- name: Download NodeJS Dependencies
  ansible.builtin.shell: npm install
  args:
    chdir: /app

- name: Install MySQL Client
  ansible.builtin.dnf:
    name: mysql
    state: present

- name: Load Schema
  ansible.builtin.shell: mysql -h {{lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_HOST' , region='us-east-1' ) }} -u{{lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_USER' , region='us-east-1' ) }} -p{{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_PASS' , region='us-east-1' ) }} < /app/schema/backend.sql

- name: Start Backend Service
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes
    daemon-reload: yes
